/**
 * Publishing to Bintray (see https://github.com/etiennestuder/gradle-plugindev-plugin/):
 *
 * gradlew -i publishPluginToBintray -PbintrayUser=[username] -PbintrayApiKey=[api-key]
 */
plugins {
  id "java-gradle-plugin"
  id "groovy"
  id "idea"
  id "maven-publish"
  id "com.jfrog.bintray" version "1.8.5"
  id "com.gradle.plugin-publish" version "0.11.0"
  id "jacoco"
  id "com.github.kt3k.coveralls" version "2.10.1"
}

repositories {
  jcenter()
}

group = "at.bxm.gradleplugins"
sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

dependencies {
  implementation("org.tmatesoft.svnkit:svnkit:1.10.1")
  testImplementation("org.spockframework:spock-core:1.3-groovy-2.5") {
    exclude group: "org.codehaus.groovy"
  }
}

gradlePlugin {
  plugins {
    svnToolsPlugin {
      id = "at.bxm.svntools"
      implementationClass = "at.bxm.gradleplugins.svntools.SvnToolsPlugin"
    }
  }
}

pluginBundle {
  description = "Provides various Subversion tasks that operate on a local SVN workspace"
  tags = ["subversion", "svn", "svnkit", "scm"]
  website = "https://github.com/martoe/gradle-svntools-plugin"
  vcsUrl = "https://github.com/martoe/gradle-svntools-plugin"
  plugins {
    svnToolsPlugin {
      displayName = 'Gradle SvnTools Plugin'
    }
  }
}

java {
    withJavadocJar()
    withSourcesJar()
}

publishing {
  publications {
    mavenArtifacts(MavenPublication) {
      from components.java
    }
  }
}

bintray { // https://github.com/bintray/gradle-bintray-plugin
  if (project.hasProperty("bintrayUser")) {
    user = "$bintrayUser"
    key = "$bintrayApiKey"
  } else {
    user = "dummy"
    key = "dummy"
    dryRun = true
  }
  publications = ["mavenArtifacts"]
  pkg {
    repo = "gradle-plugins"
    name = "gradle-svntools-plugin"
    licenses = "MIT"
    vcsUrl = "https://github.com/martoe/gradle-svntools-plugin"
    version {
      name = project.version
      desc = releaseNotes
      released = new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZZ")
      vcsTag = "v$project.version"
    }
  }
}
bintrayUpload.dependsOn build
publishPlugins.dependsOn bintrayUpload

test {
  if (project.hasProperty("ignoreTestFailures")) {
    ignoreFailures = ignoreTestFailures == "true"
  }
}

jacocoTestReport {
  reports {
    xml.enabled = true // coveralls plugin depends on xml format report
  }
}

idea {
  project {
    jdkName = "11"
  }
}
